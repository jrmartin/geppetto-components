<?xml version="1.0" encoding="ASCII"?>
<gep:GeppettoModel
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gep="https://raw.githubusercontent.com/openworm/org.geppetto.model/development/src/main/resources/geppettoModel.ecore"
    xmlns:gep_1="https://raw.githubusercontent.com/openworm/org.geppetto.model/development/src/main/resources/geppettoModel.ecore#//types"
    xmlns:gep_2="https://raw.githubusercontent.com/openworm/org.geppetto.model/development/src/main/resources/geppettoModel.ecore#//datasources">
  <libraries
      id="SWCLibrary"
      name="SWC"/>
  <libraries
      id="OBJLibrary"
      name="OBJ"/>
  <libraries
      id="OWLLibrary"
      name="OWL"/>
  <libraries
      id="ontology"
      name="Ontology">
    <types xsi:type="gep_1:SimpleType"
        id="Individual"
        name="Individual"/>
    <types xsi:type="gep_1:SimpleType"
        id="Class"
        name="Class"/>
    <types xsi:type="gep_1:SimpleType"
        id="Neuron"
        name="Neuron"/>
    <types xsi:type="gep_1:SimpleType"
        id="Neuron_projection_bundle"
        name="Neuron Projection Bundle"/>
    <types xsi:type="gep_1:SimpleType"
        id="Clone"
        name="Clone"/>
    <types xsi:type="gep_1:SimpleType"
        id="Synaptic_neuropil"
        name="Synaptic Neuropil"/>
    <types xsi:type="gep_1:SimpleType"
        id="VFB"
        name="Virtual Fly Brain"/>
    <types xsi:type="gep_1:SimpleType"
        id="Orphan"
        name="No Meta Data"/>
    <types xsi:type="gep_1:SimpleType"
        id="Obsolete"
        name="Obsolete"/>
    <types xsi:type="gep_1:SimpleType"
        id="Synaptic_neuropil_domain"
        name="Synaptic Neuropil Domain"/>
    <types xsi:type="gep_1:SimpleType"
        id="Synaptic_neuropil_subdomain"
        name="Synaptic Neuropil Subdomain"/>
    <types xsi:type="gep_1:SimpleType"
        id="Synaptic_neuropil_block"
        name="Synaptic Neuropil Block"/>
    <types xsi:type="gep_1:SimpleType"
        id="FBDV"
        name="FlyBase Development CV"/>
    <types xsi:type="gep_1:SimpleType"
        id="FBCV"
        name="FlyBase Controlled Vocabulary"/>
    <types xsi:type="gep_1:SimpleType"
        id="FBBI"
        name="FlyBase Biological Imaging Methods"/>
    <types xsi:type="gep_1:SimpleType"
        id="Root"
        name="Top Object"/>
    <types xsi:type="gep_1:SimpleType"
        id="pub"
        name="Publication"/>
    <types xsi:type="gep_1:SimpleType"
        id="Resource"
        name="Resource"/>
    <types xsi:type="gep_1:SimpleType"
        id="VFB_00017894"
        name="JFRC2 template"/>
    <types xsi:type="gep_1:SimpleType"
        id="VFB_00030786"
        name="BrainName standard - Ito half brain"/>
    <types xsi:type="gep_1:SimpleType"
        id="Template"
        name="Template"/>
    <types xsi:type="gep_1:SimpleType"
        id="hasExamples"
        name="Has Examples"/>
    <types xsi:type="gep_1:SimpleType"
        id="Cluster"
        name="Cluster"/>
    <types xsi:type="gep_1:SimpleType"
        id="Ganglion"
        name="ganglion"/>
    <types xsi:type="gep_1:SimpleType"
        id="DataSet"
        name="DataSet"/>
    <types xsi:type="gep_1:SimpleType"
        id="NBLAST"
        name="NBLAST"/>
    <types xsi:type="gep_1:SimpleType"
        id="Neuromere"
        name="neuromere"/>
    <types xsi:type="gep_1:SimpleType"
        id="Expression_pattern"
        name="expression pattern"/>
  </libraries>
  <libraries
      id="vfbLibrary"
      name="VFB"/>
  <dataSources
      id="neo4JDataSourceService"
      name="neo4j Data Source"
      dataSourceService="neo4jDataSource"
      url="http://pdb-preview.virtualflybrain.org/db/data/transaction"
      dependenciesLibrary="//@libraries.3"
      targetLibrary="//@libraries.4">
    <libraryConfigurations
        library="//@libraries.0"
        modelInterpreterId="swcModelInterpreterService"
        format="swc"/>
    <libraryConfigurations
        library="//@libraries.1"
        modelInterpreterId="objModelInterpreterService"
        format="obj"/>
    <libraryConfigurations
        library="//@libraries.2"
        modelInterpreterId="owlModelInterpreterService"
        format="owl"/>
    <queries
        xsi:type="gep_2:CompoundQuery"
        name="Get and process example images from Neo4j for class list"
        description=""
        runForCount="false">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          name="Get images from Neo4j for class examples"
          description="fetch Individual instances from ID list"
          runForCount="false"
          query="MATCH (n:Class) WHERE n.short_form IN $ARRAY_ID_RESULTS OPTIONAL MATCH (n)&lt;-[:SUBCLASSOF|INSTANCEOF*..]-(i:Individual)&lt;-[:depicts]-(j:Individual)-[k:in_register_with]->(m:Individual) OPTIONAL MATCH (n)-[:SUBCLASSOF]->(c:Class) RETURN n.short_form as class_Id, n.label as class_Name, n.description[0] as class_Desc, COLLECT(DISTINCT c.label) as class_Type, COLLECT (DISTINCT { image_name: i.label, image_id: i.short_form, image_thumb: replace(k.folder,'http:','https:') + '/thumbnailT.png', template_id: m.short_form}) AS inds"
          countQuery="MATCH (n:Class) WHERE n.short_form IN $ARRAY_ID_RESULTS RETURN count(n) AS count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process images"
          queryProcessorId="vfbCreateImagesForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        name="Get and process details from Neo4j for list of inds"
        description=""
        runForCount="false">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          id="GetMetaForIndList"
          name="Get meta from Neo4j"
          description="Get images for individual list"
          runForCount="false"
          query="MATCH (i:Individual) WHERE i.short_form IN $ARRAY_ID_RESULTS OPTIONAL MATCH (i)&lt;-[:depicts]-(:Individual)-[k1:in_register_with]->(:Individual) OPTIONAL MATCH (i:Cluster)&lt;-[:exemplar_of]-(e:Individual) OPTIONAL MATCH (i)-[:INSTANCEOF]->(ic:Class) OPTIONAL MATCH (e)-[:INSTANCEOF]->(ec:Class) with coalesce('Exemplar: ' + ec.label,ic.label) as ct, i, coalesce(replace(k1.folder,'http:','https:') + '/thumbnailT.png','http://flybrain.mrc-lmb.cam.ac.uk/vfb/fc/clusterv/3/' + e.label + '/snapshot.png') as iri, i.description[0] as cd, FILTER(x IN i.synonym WHERE x &lt;> i.label) as syn RETURN i.short_form as id, i.label  as name, CASE WHEN not syn = [] THEN cd + replace(' Synonym(s): '+reduce(a='',n in syn|a+n+', ')+')',', )','.') ELSE cd END as def, COLLECT(DISTINCT ct) as type, iri AS file"
          countQuery="MATCH(i:Individual) WHERE i.short_form IN $ARRAY_ID_RESULTS RETURN count(i) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          runForCount="false"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        name="Get fellow cluster members"
        description="">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          id="GetFellowClusterMembers"
          name="Get other cluster members"
          description="$NAME's fellow cluster members"
          query="MATCH (n:Neuron { short_form: '$ID' } )-[r1:member_of]->(c:Cluster)-[r2:has_member]->(i:Neuron)&lt;-[:depicts]-(j:Individual)-[k:in_register_with]->(m:Individual) OPTIONAL MATCH (i)-[:INSTANCEOF]->(ec:Class) RETURN i.short_form as id, CASE WHEN not i.synonym is null THEN i.label+replace(' ('+reduce(a='',n in i.synonym|a+n+', ')+')',', )',')') ELSE i.label END as name, i.description[0] as def, COLLECT(DISTINCT ec.label) as type, replace(k.folder,'http:','https:') + '/thumbnailT.png' AS file"
          countQuery="MATCH (n:Neuron { short_form: '$ID' } )-[r1:member_of]->(c:Cluster)-[r2:has_member]->(i:Neuron) RETURN count(i) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        name="All example images for a class"
        description="">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          name="Fetch all example individuals for Class"
          description="Fetch all example Individual instances of this Class or subclasses"
          returnType="//@libraries.3/@types.0"
          query="MATCH p=(n:Class { short_form: '$ID' } )&lt;-[r:expresses|SUBCLASSOF|INSTANCEOF*..]-(i:Individual)&lt;-[:depicts]-(j:Individual)-[k:in_register_with]->(m:Individual) WITH i, k ORDER BY length(p) asc OPTIONAL MATCH (i)-[:INSTANCEOF]->(c:Class) RETURN distinct i.short_form as id, CASE WHEN not i.synonym is null THEN i.label+replace(' ('+reduce(a='',n in i.synonym|a+n+', ')+')',', )',')') ELSE i.label END as name, i.description[0] as def, COLLECT(DISTINCT c.label) as type, replace(k.folder,'http:','https:') + '/thumbnailT.png' AS file"
          countQuery="MATCH (n:VFB:Class { short_form: '$ID' } )&lt;-[r:expresses|SUBCLASSOF|INSTANCEOF*..]-(i:Individual) RETURN count(i) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        id="domainsForTempId"
        name="Find domains for template"
        description="Doamins for template"
        returnType="//@libraries.3/@types.0">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          id="domainsForTempQuery"
          name="Find domain individuals for template id"
          description="Find domain individuals for template id"
          returnType="//@libraries.3/@types.0"
          query="MATCH (n:Template {short_form:'$ID'})&lt;-[:depicts]-(:Template)&lt;-[r:in_register_with]-(dc:Individual)-[:depicts]->(di:Individual)-[:INSTANCEOF]->(d:Class) WHERE has(r.index) RETURN distinct di.short_form as id, di.label as name, coalesce(di.description[0],d.description[0]) as def, COLLECT(DISTINCT d.label) as type, replace(r.folder,'http:','https:') + '/thumbnailT.png' AS file"
          countQuery="MATCH (n:Template {short_form:'$ID'})&lt;-[:depicts]-(:Template)&lt;-[r:in_register_with]-(dc:Individual)-[:depicts]->(di:Individual)-[:INSTANCEOF]->(d:Class) WHERE has(r.index) RETURN count(di) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        name="Get cluster members"
        description="">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          id="GetClusterMembers"
          name="Get cluster members"
          description="$NAME's members"
          query="MATCH (c:Cluster { short_form: '$ID' } )-[r2:has_member]->(i:Neuron)&lt;-[:depicts]-(j:Individual)-[k:in_register_with]->(m:Individual) OPTIONAL MATCH (i)-[:INSTANCEOF]->(ec:Class) RETURN i.short_form as id, CASE WHEN not i.synonym is null THEN i.label+replace(' ('+reduce(a='',n in i.synonym|a+n+', ')+')',', )',')') ELSE i.label END as name, i.description[0] as def, COLLECT(DISTINCT ec.label) as type, replace(k.folder,'http:','https:') + '/thumbnailT.png' AS file"
          countQuery="MATCH (c:Cluster { short_form: '$ID' } )-[r2:has_member]->(i:Neuron) RETURN count(i) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        id="imagesForDataSet"
        name="Find images for dataset"
        description="Images in a dataset"
        returnType="//@libraries.3/@types.0">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          id="neoImagesForDataSet"
          name="Find images for dataset"
          description="Find images for a dataset"
          returnType="//@libraries.3/@types.0"
          query="MATCH (:DataSet {short_form:'$ID'})&lt;-[:has_source]-(di:Individual)&lt;-[:depicts]-(dc:Individual)-[r:in_register_with]->(:Template) OPTIONAL MATCH (di)-[:INSTANCEOF]->(d:Class) RETURN distinct di.short_form as id, di.label as name, coalesce(di.description[0],di.description[0]) as def, COLLECT(DISTINCT d.label) as type, replace(r.folder,'http:','https:') + '/thumbnailT.png' AS file"
          countQuery="MATCH (:DataSet {short_form:'$ID'})&lt;-[:has_source]-(di:Individual) RETURN count(di) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <queries
        xsi:type="gep_2:CompoundQuery"
        id="imagesForTempId"
        name="Find images aligned to a template"
        description="Aligned images for template"
        returnType="//@libraries.3/@types.0">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          id="imagesForTempQuery"
          name="Find images aligned to template id"
          description="Find images aligned to template id"
          returnType="//@libraries.3/@types.0"
          query="MATCH (n:Template {short_form:'$ID'})&lt;-[:depicts]-(:Template)&lt;-[r:in_register_with]-(dc:Individual)-[:depicts]->(di:Individual) WHERE not has(r.index) OPTIONAL MATCH (di)-[:INSTANCEOF]->(d:Class) RETURN distinct di.short_form as id, di.label as name, coalesce(di.description[0],d.description[0]) as def, COLLECT(DISTINCT d.label) as type, replace(r.folder,'http:','https:') + '/thumbnailT.png' AS file"
          countQuery="MATCH (n:Template {short_form:'$ID'})&lt;-[:depicts]-(:Template)&lt;-[r:in_register_with]-(dc:Individual)-[:depicts]->(di:Individual) WHERE not has(r.index) RETURN count(di) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Images"
          returnType="//@libraries.3/@types.0"
          queryProcessorId="vfbCreateResultListForIndividualsForQueryResultsQueryProcessor"/>
    </queries>
    <fetchVariableQuery
        xsi:type="gep_2:CompoundQuery"
        name="The compound query for augmenting a type"
        description="">
      <queryChain
          xsi:type="gep_2:SimpleQuery"
          name="Get term info"
          description="Fetches essential details."
          query="MATCH (n {short_form:'$ID'}) OPTIONAL MATCH (n)-[r]-(o) WITH n, r, o, startnode(r) as s WITH n, r, o, CASE when s.iri = n.iri then 'node' else 'to' end as starts WHERE starts = 'node' OR type(r) = 'depicts' OR type(r) = 'is a' OR type(r) = 'INSTANCEOF' OR type(r) = 'has_source' OR type(r) = 'expresses' OR type(r) = 'has_license' OPTIONAL MATCH (n:Class)&lt;-[r:SUBCLASSOF]-(o:Class)&lt;-[fr:INSTANCEOF]-(fo:Individual)&lt;-[:depicts]-(:Individual)-[i0:in_register_with]->(:Individual)-[:depicts]->(t0:Individual) OPTIONAL MATCH (o:Individual)&lt;-[:depicts]-(:Individual)-[i1:in_register_with]->(:Template)-[:depicts]->(t1:Individual) WHERE NOT o:Template OPTIONAL MATCH (o:Individual)-[i2:in_register_with]->(:Template)-[:depicts]->(t2:Individual) OPTIONAL MATCH (o:Template)&lt;-[i3:in_register_with]-(:Individual)-[:depicts]->(t3:Individual)-[:INSTANCEOF {label:'type'}]->(dc:Class) WHERE has(i3.index) WITH  n, r, starts, coalesce(i1,i3,i2,i0) as i, coalesce(t1,t3,t2,t0) as t, dc, o, fr, fo ORDER BY t.short_form ASC RETURN 0 as order, labels(n) as labels, n as node, COLLECT({edge:coalesce(fr,r),types:type(coalesce(fr,r)),start:starts,to:coalesce(fo,dc,o),labels:labels(coalesce(fo,o)),tempIm:i,temp:t}) as links UNION ALL MATCH (pi:Individual:Synaptic_neuropil {short_form:'$ID'})-[pr:INSTANCEOF {label:'type'}]->(n:Class) MATCH (n)-[r]->(o) WHERE NOT type(r) = 'REFERSTO' RETURN 1 as order, labels(n) as labels, n as node, COLLECT({edge:r,types:type(r),start:'node',to:o,labels:labels(o),tempIm:null,temp:null}) as links ORDER BY order ASC UNION ALL MATCH (pi:Individual:Cluster {short_form:'$ID'})-[pr:has_exemplar]->(n:Individual) MATCH (n)-[r]->(o) WHERE NOT type(r) = 'REFERSTO' RETURN 1 as order, labels(n) as labels, n as node, COLLECT({edge:r,types:type(r),start:'node',to:o,labels:labels(o),tempIm:null,temp:null}) as links ORDER BY order ASC"
          countQuery="MATCH (n { short_form: '$ID' } ) RETURN count(n) as count"/>
      <queryChain
          xsi:type="gep_2:ProcessQuery"
          name="Process Term Info"
          description="Process Term Info"
          queryProcessorId="vfbProcessTermInfo"/>
    </fetchVariableQuery>
  </dataSources>
  <dataSources
      id="aberOWLDataSource"
      name="Aber OWL Data Source"
      dataSourceService="aberOWLDataSource"
      url="http://owl-preview.virtualflybrain.org/api/runQuery.groovy"
      dependenciesLibrary="//@libraries.3"
      targetLibrary="//@libraries.4"/>
  <dataSources
      id="owleryDataSourceSubclass"
      name="owlery Data Source (subclasses)"
      dataSourceService="owleryDataSource"
      url="http://owl-preview.virtualflybrain.org/kbs/vfb/subclasses"
      dependenciesLibrary="//@libraries.3"
      targetLibrary="//@libraries.4">
    <queries
        xsi:type="gep_2:SimpleQuery"
        name="Owlery Part of"
        description="Part of $NAME"
        query="object=%3Chttp://purl.obolibrary.org/obo/BFO_0000050%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        name="Owlery Neuron class with part here"
        description="Neurons with some part here"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002131%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        name="Owlery Neurons Synaptic"
        description="Neurons with synaptic terminals here"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002130%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        name="Owlery Neurons Presynaptic"
        description="Neurons with presynaptic terminals here"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002113%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        name="Owlery Neurons Postsynaptic"
        description="Neurons with postsynaptic terminals here"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002110%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:ProcessQuery"
        id="owlPassIdListOnly"
        name="Owlery Pass id list only"
        description="Keep nothing slimply pass ids"
        queryProcessorId="owleryIdOnlyQueryProcessor"/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="AberNeuronClassesFasciculatingHere"
        name="Owlery Neuron classes fasciculating here"
        description="Neuron classes fasciculating here"
        returnType="//@libraries.3/@types.1"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002101%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="innervatesX"
        name="Owlery tracts in"
        description="tracts in"
        returnType="//@libraries.3/@types.1"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005099%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002134%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="subclasses"
        name="Owlery Subclasses of"
        description="Subclasses of $NAME"
        returnType="//@libraries.3/@types.1"
        query="object=%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="TransgenesExpressedInX "
        name="Owlery Transgenes expressed in "
        description="Transgenes expressed in "
        returnType="//@libraries.3/@types.1"
        query=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="lineageClones"
        name="Owlery Lineage Clones"
        description="Lineage clones found in"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00007683%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002131%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false&amp;includeEquivalent=true"
        countQuery=""/>
  </dataSources>
  <dataSources
      id="owleryDataSourceRealise"
      name="owlery Data Source (instances)"
      dataSourceService="owleryDataSource"
      url="http://owl-preview.virtualflybrain.org/kbs/vfb/instances"
      dependenciesLibrary="//@libraries.3"
      targetLibrary="//@libraries.4">
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="ImagesOfNeuronsWithSomePartHereClustered"
        name="Owlery Images of neurons with some part here (clustered)"
        description="Images of neurons with some part here (clustered)"
        returnType="//@libraries.3/@types.22"
        query="object=%3Chttp://purl.obolibrary.org/obo/C888C3DB-AEFA-447F-BD4C-858DFE33DBE7%3E%20some%20(%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002131%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E)&amp;direct=false&amp;includeDeprecated=false"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="ImagesOfNeuronsWithSomePartHere"
        name="Owlery Images of neurons with some part here"
        description="Images of neurons with some part here"
        returnType="//@libraries.3/@types.2"
        query="object=%3Chttp://purl.obolibrary.org/obo/FBbt_00005106%3E%20and%20%3Chttp://purl.obolibrary.org/obo/RO_0002131%3E%20some%20%3Chttp://purl.obolibrary.org/obo/$ID%3E&amp;direct=false&amp;includeDeprecated=false"
        countQuery=""/>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="Owlery_individual_parts"
        name="Owlery individual parts"
        description="Find individuals that are part of some X (useful for finding expression pattern parts)."
        returnType="//@libraries.3/@types.0"
        query="object=%3Chttp://purl.obolibrary.org/obo/BFO_0000050%3E%20some%20%3Chttp://virtualflybrain.org/reports/$ID%3E&amp;direct=false&amp;includeDeprecated=false"
        countQuery=""/>
    <queries
        xsi:type="gep_2:ProcessQuery"
        id="owlPassIdListOnlyInstances"
        name="Owlery Pass id list only Instances"
        description="Keep nothing slimply pass ids"
        returnType="//@libraries.3/@types.0"
        queryProcessorId="owleryIdOnlyQueryProcessor"/>
  </dataSources>
  <dataSources
      id="opencpuDataSource"
      name="NBLAST Data Source"
      dataSourceService="opencpuDataSource"
      url="http://r.virtualflybrain.org/ocpu/library/vfbr/R/vfb_nblast/json"
      dependenciesLibrary="//@libraries.3"
      targetLibrary="//@libraries.4">
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="nblastSimilarTo"
        name="NBLAST similar to"
        description="Similar to $NAME"
        query="&quot;query&quot;:&quot;$ID&quot;,&quot;target&quot;:&quot;FlyCircuit&quot;,&quot;n&quot;:25,&quot;vfb_ids&quot;:true,&quot;normalisation&quot;:&quot;mean&quot;"
        countQuery="">
      <matchingCriteria
          type="//@libraries.3/@types.0 //@libraries.3/@types.2 //@libraries.3/@types.25"/>
    </queries>
    <queries
        xsi:type="gep_2:SimpleQuery"
        id="nblastGal4To"
        name="NBLAST Transgene for"
        description="NBLAST for potential GAL4 patterns targetting $NAME"
        returnType="//@libraries.3/@types.0"
        query="&quot;query&quot;:&quot;$ID&quot;,&quot;target&quot;:&quot;GMR-Gal4&quot;,&quot;n&quot;:25,&quot;vfb_ids&quot;:true"
        countQuery="">
      <matchingCriteria
          type="//@libraries.3/@types.0 //@libraries.3/@types.2 //@libraries.3/@types.25"/>
    </queries>
    <queries
        xsi:type="gep_2:ProcessQuery"
        id="nblastPassIdAndScores"
        name="NBLAST pass ids and scores"
        description="Keep nothing slimply pass ids and scores"
        queryProcessorId="nblastQueryProcessor"/>
  </dataSources>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="ListAllExamples"
      name="List all example images for class with examples"
      description="List all example images of $NAME"
      returnType="//@libraries.3/@types.0"
      queryChain="//@dataSources.0/@queries.3">
    <matchingCriteria
        type="//@libraries.3/@types.21 //@libraries.3/@types.1"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="CompSubclasses"
      name="Subclasses of"
      description="Subclasses of $NAME"
      returnType="//@libraries.3/@types.1"
      queryChain="//@dataSources.2/@queries.8 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="partsof"
      name="Parts of"
      description="Parts of $NAME"
      returnType="//@libraries.3/@types.1"
      queryChain="//@dataSources.2/@queries.0 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="CompNeuronClassesFasciculatingHere"
      name="Neuron classes fasciculating here"
      description="Neurons fasciculating in $NAME"
      returnType="//@libraries.3/@types.1"
      queryChain="//@dataSources.2/@queries.6 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.3"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="ImagesNeurons"
      name="Images of neurons with some part here"
      description="Images of neurons with some part in $NAME"
      returnType="//@libraries.3/@types.2"
      queryChain="//@dataSources.3/@queries.1 //@dataSources.3/@queries.3 //@dataSources.0/@queries.1">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="ImagesNeuronsClustered"
      name="Images of neurons with some part here (clustered)"
      description="Images of neurons with some part in $NAME (clustered)"
      returnType="//@libraries.3/@types.22"
      queryChain="//@dataSources.3/@queries.0 //@dataSources.3/@queries.3 //@dataSources.0/@queries.1">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="neuronsparthere"
      name="Neurons with any part here"
      description="Neurons with some part in $NAME"
      queryChain="//@dataSources.2/@queries.1 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.26"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="epFrag"
      name="Images of expression pattern fragments"
      description="Images of fragments of $NAME"
      queryChain="//@dataSources.3/@queries.2 //@dataSources.3/@queries.3 //@dataSources.0/@queries.1">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.27"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="neuronssynaptic"
      name="Neurons Synaptic"
      description="Neurons with synaptic terminals in $NAME"
      queryChain="//@dataSources.2/@queries.2 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.26"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="neuronspresynaptic"
      name="Neurons Presynaptic"
      description="Neurons with presynaptic terminals in $NAME"
      queryChain="//@dataSources.2/@queries.3 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.26"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="neuronspostsynaptic"
      name="Neurons Postsynaptic"
      description="Neurons with postsynaptic terminals in $NAME"
      queryChain="//@dataSources.2/@queries.4 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.26"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="ListClustMembers"
      name="Cluster Members"
      description="Neurons in $NAME"
      returnType="//@libraries.3/@types.2"
      queryChain="//@dataSources.0/@queries.5">
    <matchingCriteria
        type="//@libraries.3/@types.0 //@libraries.3/@types.22"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="paintedDomains"
      name="Show all painted domains for template"
      description="List all painted anatomy available for $NAME"
      returnType="//@libraries.3/@types.0"
      queryChain="//@dataSources.0/@queries.4">
    <matchingCriteria
        type="//@libraries.3/@types.20 //@libraries.3/@types.0"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="datasetImages"
      name="Show all images for a dataset"
      description="List all images included in $NAME"
      returnType="//@libraries.3/@types.0"
      queryChain="//@dataSources.0/@queries.6">
    <matchingCriteria
        type="//@libraries.3/@types.24"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="CompNeuronClassesInnervatingHere"
      name="Tracts/nerves innervating synaptic neuropil"
      description="Tracts/nerves innervating $NAME"
      returnType="//@libraries.3/@types.1"
      queryChain="//@dataSources.2/@queries.7 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="componentsOf"
      name="Components of"
      description="Components of $NAME"
      returnType="//@libraries.3/@types.1"
      queryChain="//@dataSources.2/@queries.0 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.4"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="lineageClonesIn"
      name="Lineage clones found here"
      description="Lineage clones found in $NAME"
      returnType="//@libraries.3/@types.4"
      queryChain="//@dataSources.2/@queries.10 //@dataSources.2/@queries.5 //@dataSources.0/@queries.0">
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.5"/>
    <matchingCriteria
        type="//@libraries.3/@types.1 //@libraries.3/@types.23"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="similarto"
      name="NBLAST Similar to"
      description="NBLAST Similar to $NAME"
      returnType="//@libraries.3/@types.2"
      queryChain="//@dataSources.4/@queries.0 //@dataSources.4/@queries.2 //@dataSources.0/@queries.1">
    <matchingCriteria
        type="//@libraries.3/@types.0 //@libraries.3/@types.2 //@libraries.3/@types.25"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="targeting"
      name="NBLAST GAL4 tragetting"
      description="NBLAST potential GAL4's targetting $NAME"
      returnType="//@libraries.3/@types.0"
      queryChain="//@dataSources.4/@queries.1 //@dataSources.4/@queries.2 //@dataSources.0/@queries.1">
    <matchingCriteria
        type="//@libraries.3/@types.0 //@libraries.3/@types.2 //@libraries.3/@types.25"/>
  </queries>
  <queries xsi:type="gep_2:CompoundRefQuery"
      id="alignedImages"
      name="Show all images aligned to template"
      description="List all images aligned to $NAME"
      returnType="//@libraries.3/@types.0"
      queryChain="//@dataSources.0/@queries.7">
    <matchingCriteria
        type="//@libraries.3/@types.20 //@libraries.3/@types.0"/>
  </queries>
</gep:GeppettoModel>
